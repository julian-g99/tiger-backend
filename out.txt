main:
	0:		li fpt0, 100
	1:		move fpt1, v
	2:		li fpt2, 0
	3:	main_array_assign_loop0:
	4:		blez fpt0, main_array_assign_end0
	5:		sw fpt2, (fpt1)
	6:		addi fpt0, fpt0, -1
	7:		addiu fpt1, fpt1, 4
	8:		j main_array_assign_loop0
	9:	main_array_assign_end0:
	10:		li m, 10
	11:		li p, 0
	12:		li $v0, 5
	13:		syscall
	14:		move n, $v0
	15:		li i, 0
	16:	main_L0:
	17:		bge i, n, main_EOI
	18:		li $v0, 5
	19:		syscall
	20:		move c, $v0
	21:		move fpt4, i
	22:		sll fpt4, fpt4, 2
	23:		addu fpt4, en, fpt4
	24:		sw c, (fpt4)
	25:		li j, 0
	26:	main_L1:
	27:		bge j, c, main_L2
	28:		li $v0, 5
	29:		syscall
	30:		move x, $v0
	31:		mul t, m, i
	32:		add t, t, j
	33:		move fpt6, t
	34:		sll fpt6, fpt6, 2
	35:		addu fpt6, e, fpt6
	36:		sw x, (fpt6)
	37:		addi j, j, 1
	38:		j main_L1
	39:	main_L2:
	40:		addi i, i, 1
	41:		j main_L0
	42:	main_EOI:
	43:		li fpt7, 1
	44:		sw fpt7, (v)
	45:		li fpt8, 0
	46:		sw fpt8, (q)
	47:		lw t0, (v)
	48:		li ii, 0
	49:		move i, ii
	50:		li j, 1
	51:	main_L3:
	52:		beq i, j, main_FIN
	53:		move fpt10, i
	54:		sll fpt10, fpt10, 2
	55:		addu fpt10, q, fpt10
	56:		lw now, (fpt10)
	57:		addi ii, i, 1
	58:		move i, ii
	59:		move fpt11, now
	60:		sll fpt11, fpt11, 2
	61:		addu fpt11, en, fpt11
	62:		lw c, (fpt11)
	63:		move k, i
	64:		li k, 0
	65:	main_L4:
	66:		bge k, c, main_L5
	67:		move t, k
	68:		mul t, m, now
	69:		add t, t, k
	70:		move fpt13, t
	71:		sll fpt13, fpt13, 2
	72:		addu fpt13, e, fpt13
	73:		lw x, (fpt13)
	74:		move fpt14, x
	75:		sll fpt14, fpt14, 2
	76:		addu fpt14, v, fpt14
	77:		lw tv, (fpt14)
	78:		li fpt15, 1
	79:		beq tv, fpt15, main_L6
	80:		li fpt16, 1
	81:		move fpt17, x
	82:		sll fpt17, fpt17, 2
	83:		addu fpt17, v, fpt17
	84:		sw fpt16, (fpt17)
	85:		move fpt18, j
	86:		sll fpt18, fpt18, 2
	87:		addu fpt18, q, fpt18
	88:		sw x, (fpt18)
	89:		move fpt19, x
	90:		sll fpt19, fpt19, 2
	91:		addu fpt19, v, fpt19
	92:		lw t0, (fpt19)
	93:		addi j, j, 1
	94:	main_L6:
	95:		addi k, k, 1
	96:		j main_L4
	97:	main_L5:
	98:		j main_L3
	99:	main_FIN:
	100:		li ii, 0
	101:		move i, ii
	102:	main_L7:
	103:		beq i, j, main_L8
	104:		move fpt21, i
	105:		sll fpt21, fpt21, 2
	106:		addu fpt21, q, fpt21
	107:		lw x, (fpt21)
	108:		save_arg $a0
	109:		move $a0, x
	110:		li $v0, 1
	111:		syscall
	112:		restore_arg $a0
	113:		save_arg $a0
	114:		li $a0, 10
	115:		li $v0, 11
	116:		syscall
	117:		restore_arg $a0
	118:		addi ii, i, 1
	119:		move i, ii
	120:		j main_L7
	121:	main_L8:
{<mc_instruction.MCInstruction object at 0x7f0e2137c310>, <mc_instruction.MCInstruction object at 0x7f0e2137c2b0>, <mc_instruction.MCInstruction object at 0x7f0e2137c2e0>}
{<mc_instruction.MCInstruction object at 0x7f0e2137c310>, <mc_instruction.MCInstruction object at 0x7f0e2137c2b0>, <mc_instruction.MCInstruction object at 0x7f0e2137c2e0>}
